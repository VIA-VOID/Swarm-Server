/*
그룹명		: 사용할 JobGroupId 정의							/ JobGroups::Player
스레드수		: Job으로 등록할 스레드 개수						/ 1이상의 숫자
우선순위		: Job을 처리할 우선순위 지정(높을수록 우선처리)		/ Low, Normal, High
등록여부		: 지정한 스레드수만큼 스레드 생성 or 미생성			/ true, false
클래스명		: 실제 Job을 등록할 클래스명						/ Player, Dungeon, ...

Job 생성자 호출시(DoAsync & DoAsyncAfter) 필요한 3가지 등록

1. namespace JobGroups 등록, Job 그룹 정의
	- 등록 형식: JOB_GROUP(그룹명, 스레드수, 우선순위, Job 스레드 등록 여부)
	- ex) JOB_GROUP(Player, 2, High, true)

2. 등록한 JobGroups(JobGroupId)와 클래스 매핑
	- 등록 형식: CLASS_TO_JOB(클래스명, 그룹명)
	- ex) CLASS_TO_JOB(Player, Player)

3. 매크로가 지정된 .cpp 파일에 해당하는 클래스를 include

그룹명 1개당 여러 클래스 등록가능
ex)	JOB_GROUP(Player, 2, High, true)
	CLASS_TO_JOB(PlayerManager, Player)
	CLASS_TO_JOB(InventorySystem, Player)
	CLASS_TO_JOB(PlayerSkill, Player)
*/

// 형식: JOB_GROUP(그룹명, 스레드수, 우선순위, Job 스레드 등록 여부)
JOB_GROUP(Player, 3, High, true)


// 형식: CLASS_TO_JOB(클래스명, 그룹명)
CLASS_TO_JOB(Player, Player)
